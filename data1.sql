INSERT INTO `blog` (`id`, `title`, `summary`, `content`, `html_content`, `tags`, `comment_size`, `read_size`, `gmt_create`, `gmt_modified`)
VALUES
	(1, '初步了解Docker', 'Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。\n\n起源\nDocker 是 PaaS 提供商 dotCloud 开源的一个基于 LXC 的高级', 'Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。\n\n起源\nDocker 是 PaaS 提供商 dotCloud 开源的一个基于 LXC 的高级容器引擎，源代码托管在 Github 上, 基于go语言并遵从Apache2.0协议开源。\nDocker自2013年以来非常火热，无论是从 github 上的代码活跃度，还是Redhat在RHEL6.5中集成对Docker的支持, 就连 Google 的 Compute Engine 也支持 docker 在其之上运行。\n一款开源软件能否在商业上成功，很大程度上依赖三件事 - 成功的 user case(用例), 活跃的社区和一个好故事。 dotCloud 自家的 PaaS 产品建立在docker之上，长期维护且有大量的用户，社区也十分活跃，接下来我们看看docker的故事。', '', 'Docker,入门', 0, 1, '2016-03-11 20:11:44', '2018-03-22 21:32:52'),
	(2, '什么是Java？', 'Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。 Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程[1] 。 Java具有简单性', 'Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。 Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程[1] 。 Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等 。', '', 'Java,入门', 0, 12, '2016-03-11 20:11:45', '2018-03-22 21:32:56'),
	(3, '如何学习Vue.js', 'Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为', 'Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。\n\n如果你想在深入学习 Vue 之前对它有更多了解，我们制作了一个视频，带您了解其核心概念和一个示例工程。\n\n如果你已经是有经验的前端开发者，想知道 Vue 与其它库/框架有哪些区别，请查看对比其它框架。', '', 'Vue.js,入门', 0, 10, '2016-03-11 20:12:48', '2018-03-22 21:32:59'),
	(4, '您已提交备案', '因目前备案提交量较大，我们将在 1个工作日内（2018-03-12 24:00 前）帮助您核查备案信息。 审核时如发现问题，会第一时间联系网站负责人傅双波，请务必保持电话畅通。 给您带来不便请谅解，如有特殊问题推荐使用页面右下角的“腾讯云智能客服”，快速高效解决您的备案问题。 以上方式如没有解答您的', '因目前备案提交量较大，我们将在 1个工作日内（2018-03-12 24:00 前）帮助您核查备案信息。\n审核时如发现问题，会第一时间联系网站负责人傅双波，请务必保持电话畅通。\n给您带来不便请谅解，如有特殊问题推荐使用页面右下角的“腾讯云智能客服”，快速高效解决您的备案问题。\n以上方式如没有解答您的问题，也可拨打 4009100100 咨询。\n', '', '其他', 0, 8, '2017-03-12 18:44:45', '2018-03-24 13:01:51'),
	(5, '李荣浩是谁？', '李荣浩，1985年7月11日出生于安徽省蚌埠市，中国流行乐男歌手、音乐制作人、演员、吉他手。2013年9月16日，发行首张专辑《模特》，凭借这张专辑提名第25届金曲奖五项大奖并获得最佳新人奖，实现了从制作人到歌手的转型；2014年9月4日签约华纳唱片，发行第二张同名专辑《李荣浩》，并在次年举办8场“', '李荣浩，1985年7月11日出生于安徽省蚌埠市，中国流行乐男歌手、音乐制作人、演员、吉他手。2013年9月16日，发行首张专辑《模特》，凭借这张专辑提名第25届金曲奖五项大奖并获得最佳新人奖，实现了从制作人到歌手的转型；2014年9月4日签约华纳唱片，发行第二张同名专辑《李荣浩》，并在次年举办8场“天生李荣浩巡回演唱会”。2016年1月22日发行第三张专辑《有理想》，同年举办“有理想世界巡回演唱会”。', '', '李荣浩, 百度百科', 0, 8, '2017-08-13 10:23:36', '2018-03-22 21:33:10'),
	(6, 'JAVA反射机制', 'JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性；这种动态获取信息以及动态调用对象方法的功能称为java语言的反射机制。 JAVA反射（放射）机制：“程序运行时，允许改变程序结构或变量类型，这种语言称为动态语言”。从这个', 'JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性；这种动态获取信息以及动态调用对象方法的功能称为java语言的反射机制。\nJAVA反射（放射）机制：“程序运行时，允许改变程序结构或变量类型，这种语言称为动态语言”。从这个观点看，Perl，Python，Ruby是动态语言，C++，Java，C#不是动态语言。但是JAVA有着一个非常突出的动态相关机制：Reflection，用在Java身上指的是我们可以于运行时加载、探知、使用编译期间完全未知的classes。换句话说，Java程序可以加载一个运行时才得知名称的class，获悉其完整构造（但不包括methods定义），并生成其对象实体、或对其fields设值、或唤起其methods。', '', 'Java,反射,入门', 0, 7, '2017-10-13 11:13:46', '2018-03-22 21:33:16'),
	(7, '55', '555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555', '555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555', '', '其他', 0, 5, '2017-11-14 07:43:08', '2018-03-22 21:33:22'),
	(8, '一二三四五六七八九十一二三四五', 'Hibernate: select category0_.category_id as category1_1_0_, category0_.category_name as category2_1_0_ from category category0_ where category0_.categ', 'Hibernate: select category0_.category_id as category1_1_0_, category0_.category_name as category2_1_0_ from category category0_ where category0_.category_id=?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) and (blog0_.blog_id not in  (?))\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? and (blog0_.tags like ?) order by blog0_.create_time desc limit ?\nHibernate: select blog0_.blog_id as blog_id1_0_, blog0_.category_id as category2_0_, blog0_.comment_size as comment_3_0_, blog0_.content as content4_0_, blog0_.create_time as create_t5_0_, blog0_.html_content as html_con6_0_, blog0_.read_size as read_siz7_0_, blog0_.tags as tags8_0_, blog0_.title as title9_0_, blog0_.update_time as update_10_0_ from blog blog0_ where blog0_.category_id=? order by blog0_.read_size desc, blog0_.comment_size desc limit ?\nHibernate: select tag0_.id as id1_2_, tag0_.category_id as category2_2_, tag0_.create_time as create_t3_2_, tag0_.tag_count as tag_coun4_2_, tag0_.tag_name as tag_name5_2_, tag0_.update_time as update_t6_2_ from tag tag0_ where tag0_.category_id=? order by tag0_.tag_count desc\n', '', '其他', 0, 7, '2018-01-14 07:59:45', '2018-03-24 13:01:25'),
	(9, 'Springboot简单入门', 'Spring Boot可以轻松创建独立的，生产级的基于Spring的应用程序，您可以“运行”。我们对Spring平台和第三方库有自己的看法，所以您可以尽量少用大惊小怪。大多数Spring Boot应用程序只需要很少的Spring配置。 特征 创建独立的Spring应用程序 直接嵌入Tomcat，J', 'Spring Boot可以轻松创建独立的，生产级的基于Spring的应用程序，您可以“运行”。我们对Spring平台和第三方库有自己的看法，所以您可以尽量少用大惊小怪。大多数Spring Boot应用程序只需要很少的Spring配置。\n\n特征\n创建独立的Spring应用程序\n直接嵌入Tomcat，Jetty或Undertow（无需部署WAR文件）\n提供自己的\'入门\'POM来简化你的Maven配置\n尽可能自动配置Spring\n提供生产就绪功能，如指标，运行状况检查和外部配置\n绝对不会生成代码，并且不需要XML配置\n该参考指南包括的所有功能的详细说明，加上一个广泛的howto共同使用的情况。\n\n\n快速开始\n如果您是Java开发人员，则可以使用start.spring.io生成基本项目，请按照下面的“快速入门”示例或阅读参考文档入门指南。', '', 'Springboot,入门', 0, 13, '2018-01-20 08:37:44', '2018-03-24 13:01:45'),
	(10, 'Docker基础指令', '## 1、拉取镜像 > docker pull 镜像 例如： > docker pull centos:7 docker pull mysql:5.7 ## 2、列出镜像 > docker images 结果如下： ``` REPOSITORY TAG ', '## 1、拉取镜像\n\n> docker pull 镜像\n\n例如：\n\n> docker pull centos:7\ndocker pull mysql:5.7\n\n## 2、列出镜像\n> docker images\n\n结果如下：\n```\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/centos    7                   2d194b392dd1        8 days ago          195 MB\ndocker.io/mysql     5.7                 5d4d51c57ea8        2 weeks ago         374 MB\n```\n\n\n## 3、删除镜像\n> docker rmi 镜像\n\n例如：\n> docker rmi 2d194b392dd1\ndocker rmi centos:7\n\n## 4、导入导出镜像\n### 导出镜像\n> docker save 镜像 >/root/xx.tar.gz\n\n例如：\n> docker save 5d4d51c57ea8 > /root/mysql5.7.tar.gz\n\n### 导入镜像\n> docker load 镜像 </root/xx.tar.gz\n\n例如：\n> docker save 5d4d51c57ea8 < /root/mysql5.7.tar.gz\n\n## 5、启动容器\n### 以交互方式启动容器（前台启动）\ndocker run -it --name 容器名称 镜像\n\n例如：\n> docker run -it --name mycentos 2d194b392dd1 /bin/bash\n\n> docker run -it --name mytomcat tomcat:8 -p8080:8080 /bin/bash\n\n### 以守护进程方式启动容器（后台启动）\n> docker run -d --name 容器名称 镜像\n\n例如：\n> docker run --name test-mysql -p 3306:3306 -e MYSQL\\_ROOT\\_PASSWORD=123456 -d mysql:5.7\n\n## 6、查看容器\n\n### 查看正在运行容器\n> docker ps \n\n结果如下：\n```\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n2a79ca944934        2d194b392dd1        \"/bin/bash\"              About an hour ago   Up About an hour    0.0.0.0:8080->8080/tcp   mycentos\nb7e7bd42e1ad        5d4d51c57ea8        \"docker-entrypoint...\"   3 hours ago         Up 3 hours          0.0.0.0:3306->3306/tcp   test-mysql\n```\n### 查看历史运行过的容器\n> docker ps -a\n\n### 查看最近运行过的容器\n> docker ps -l\n\n## 7、停止/重启容器\n> docker stop/restart 容器名称或者容器ID\n\n例如：\n> docker stop mycentos\ndocker restart test-mysql\n\n\n## 8、删除容器\n### 删除指定容器\n> docker rm 容器名称或者容器ID\n\n### 删除所有容器\n> docker rm \'docker ps -a -q\' ', '<h2 id=\"h2-1-\"><a name=\"1、拉取镜像\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1、拉取镜像</h2><blockquote>\n<p>docker pull 镜像</p>\n</blockquote>\n<p>例如：</p>\n<blockquote>\n<p>docker pull centos:7<br>docker pull mysql:5.7</p>\n</blockquote>\n<h2 id=\"h2-2-\"><a name=\"2、列出镜像\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2、列出镜像</h2><blockquote>\n<p>docker images</p>\n</blockquote>\n<p>结果如下：</p>\n<pre><code>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/centos    7                   2d194b392dd1        8 days ago          195 MB\ndocker.io/mysql     5.7                 5d4d51c57ea8        2 weeks ago         374 MB\n</code></pre><h2 id=\"h2-3-\"><a name=\"3、删除镜像\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3、删除镜像</h2><blockquote>\n<p>docker rmi 镜像</p>\n</blockquote>\n<p>例如：</p>\n<blockquote>\n<p>docker rmi 2d194b392dd1<br>docker rmi centos:7</p>\n</blockquote>\n<h2 id=\"h2-4-\"><a name=\"4、导入导出镜像\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4、导入导出镜像</h2><h3 id=\"h3-u5BFCu51FAu955Cu50CF\"><a name=\"导出镜像\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>导出镜像</h3><blockquote>\n<p>docker save 镜像 &gt;/root/xx.tar.gz</p>\n</blockquote>\n<p>例如：</p>\n<blockquote>\n<p>docker save 5d4d51c57ea8 &gt; /root/mysql5.7.tar.gz</p>\n</blockquote>\n<h3 id=\"h3-u5BFCu5165u955Cu50CF\"><a name=\"导入镜像\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>导入镜像</h3><blockquote>\n<p>docker load 镜像 &lt;/root/xx.tar.gz</p>\n</blockquote>\n<p>例如：</p>\n<blockquote>\n<p>docker save 5d4d51c57ea8 &lt; /root/mysql5.7.tar.gz</p>\n</blockquote>\n<h2 id=\"h2-5-\"><a name=\"5、启动容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5、启动容器</h2><h3 id=\"h3--\"><a name=\"以交互方式启动容器（前台启动）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>以交互方式启动容器（前台启动）</h3><p>docker run -it —name 容器名称 镜像</p>\n<p>例如：</p>\n<blockquote>\n<p>docker run -it —name mycentos 2d194b392dd1 /bin/bash</p>\n<p>docker run -it —name mytomcat tomcat:8 -p8080:8080 /bin/bash</p>\n</blockquote>\n<h3 id=\"h3--\"><a name=\"以守护进程方式启动容器（后台启动）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>以守护进程方式启动容器（后台启动）</h3><blockquote>\n<p>docker run -d —name 容器名称 镜像</p>\n</blockquote>\n<p>例如：</p>\n<blockquote>\n<p>docker run —name test-mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</p>\n</blockquote>\n<h2 id=\"h2-6-\"><a name=\"6、查看容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>6、查看容器</h2><h3 id=\"h3-u67E5u770Bu6B63u5728u8FD0u884Cu5BB9u5668\"><a name=\"查看正在运行容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>查看正在运行容器</h3><blockquote>\n<p>docker ps </p>\n</blockquote>\n<p>结果如下：</p>\n<pre><code>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n2a79ca944934        2d194b392dd1        &quot;/bin/bash&quot;              About an hour ago   Up About an hour    0.0.0.0:8080-&gt;8080/tcp   mycentos\nb7e7bd42e1ad        5d4d51c57ea8        &quot;docker-entrypoint...&quot;   3 hours ago         Up 3 hours          0.0.0.0:3306-&gt;3306/tcp   test-mysql\n</code></pre><h3 id=\"h3-u67E5u770Bu5386u53F2u8FD0u884Cu8FC7u7684u5BB9u5668\"><a name=\"查看历史运行过的容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>查看历史运行过的容器</h3><blockquote>\n<p>docker ps -a</p>\n</blockquote>\n<h3 id=\"h3-u67E5u770Bu6700u8FD1u8FD0u884Cu8FC7u7684u5BB9u5668\"><a name=\"查看最近运行过的容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>查看最近运行过的容器</h3><blockquote>\n<p>docker ps -l</p>\n</blockquote>\n<h2 id=\"h2-7-\"><a name=\"7、停止/重启容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>7、停止/重启容器</h2><blockquote>\n<p>docker stop/restart 容器名称或者容器ID</p>\n</blockquote>\n<p>例如：</p>\n<blockquote>\n<p>docker stop mycentos<br>docker restart test-mysql</p>\n</blockquote>\n<h2 id=\"h2-8-\"><a name=\"8、删除容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>8、删除容器</h2><h3 id=\"h3-u5220u9664u6307u5B9Au5BB9u5668\"><a name=\"删除指定容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>删除指定容器</h3><blockquote>\n<p>docker rm 容器名称或者容器ID</p>\n</blockquote>\n<h3 id=\"h3-u5220u9664u6240u6709u5BB9u5668\"><a name=\"删除所有容器\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>删除所有容器</h3><blockquote>\n<p>docker rm ‘docker ps -a -q’ </p>\n</blockquote>\n', 'Docker,入门', 0, 257, '2018-02-01 17:13:17', '2018-03-22 21:33:36'),
	(11, '字符串Strings常见的使用方法', '判断是不是为空:null: <span th:if=\"${name} != null\">不为空</span> <span th:if=\"${name1} == null\">为空</span> 判断是不是为空字符串: “” <span th:if=\"${#strings.isEmpty(nam', '判断是不是为空:null: \n<span th:if=\"${name} != null\">不为空</span> \n<span th:if=\"${name1} == null\">为空</span> \n判断是不是为空字符串: “” \n<span th:if=\"${#strings.isEmpty(name1)}\">空的</span> \n判断是否相同： \n<span th:if=\"${name} eq \'jack\'\">相同于jack,</span> \n<span th:if=\"${name} eq \'ywj\'\">相同于ywj,</span> \n<span th:if=\"${name} ne \'jack\'\">不相同于jack,</span> \n不存在设置默认值： \n<span th:text=\"${name2} ?: \'默认值\'\"></span> \n是否包含(分大小写): \n<span th:if=\"${#strings.contains(name,\'ez\')}\">包ez</span> \n<span th:if=\"${#strings.contains(name,\'y\')}\">包j</span> \n是否包含（不分大小写） \n<span th:if=\"${#strings.containsIgnoreCase(name,\'y\')}\">包j</span> \n同理。。。下面的和JAVA的String基本一样。。。。不笔记解释，官网有\n\n${#strings.startsWith(name,\'o\')} \n${#strings.endsWith(name, \'o\')} \n${#strings.indexOf(name,frag)}// 下标 \n${#strings.substring(name,3,5)}// 截取 \n${#strings.substringAfter(name,prefix)}// 从 prefix之后的一位开始截取到最后,比如 (ywj,y) = wj, 如果是(abccdefg,c) = cdefg//里面有2个c,取的是第一个c \n${#strings.substringBefore(name,suffix)}// 同上，不过是往前截取 \n${#strings.replace(name,\'las\',\'ler\')}// 替换 \n${#strings.prepend(str,prefix)}// 拼字字符串在str前面 \n${#strings.append(str,suffix)}// 和上面相反，接在后面 \n${#strings.toUpperCase(name)} \n${#strings.toLowerCase(name)} \n${#strings.trim(str)} \n${#strings.length(str)} \n${#strings.abbreviate(str,10)}// 我的理解是 str截取0-10位，后面的全部用…这个点代替，注意，最小是3位', '', 'thymeleaf,基础', 0, 11, '2018-02-06 17:15:18', '2018-03-22 21:33:40'),
	(12, 'Java按字节截取带有汉字的字符串的解法', '/** * 判断传进来的字符串，是否 * 大于指定的字节，如果大于递归调用 * 直到小于指定字节数 ，一定要指定字符编码，因为各个系统字符编码都不一样，字节数也不一样 * @param s * 原始字符串 ', '/**  \n     * 判断传进来的字符串，是否  \n     * 大于指定的字节，如果大于递归调用\n     * 直到小于指定字节数 ，一定要指定字符编码，因为各个系统字符编码都不一样，字节数也不一样 \n     * @param s  \n     *            原始字符串  \n     * @param num  \n     *            传进来指定字节数  \n     * @return String 截取后的字符串  \n\n     * @throws UnsupportedEncodingException \n     */ \n    public static String idgui(String s,int num)throws Exception{\n        int changdu = s.getBytes(\"UTF-8\").length;\n        if(changdu > num){\n            s = s.substring(0, s.length() - 1);\n            s = idgui(s,num);\n        }\n        return s;\n    }', '', 'Java', 0, 109, '2018-03-08 17:17:30', '2018-03-24 13:01:10'),
	(13, '为什么jpa两个不同的查询方法查得结果为同一对象？', '为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？', '为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？为什么jpa两个不同的查询方法查得结果为同一对象？', '', 'jpa,java,疑问', 0, 83, '2018-03-11 20:01:09', '2018-03-24 13:02:53'),
	(14, '也许身在远方，心却从未远离', '或许我们就这样错过，再来后悔为何当初不说。摘不到的星星，总是最闪亮的。熘掉的小鱼，总是最美丽的。错过的电影，总是最好看的。失去的情人，总是最懂我的。这世界上，每一个人都有个想要寻找的人。 是的，我知道了，我们会永远在一起，因为你就在我心里，无论你去任何地方，我们都永远在一起，永远，永远。 爱', '或许我们就这样错过，再来后悔为何当初不说。摘不到的星星，总是最闪亮的。熘掉的小鱼，总是最美丽的。错过的电影，总是最好看的。失去的情人，总是最懂我的。这世界上，每一个人都有个想要寻找的人。\n \n是的，我知道了，我们会永远在一起，因为你就在我心里，无论你去任何地方，我们都永远在一起，永远，永远。\n \n爱一个人就是喜欢和他拥有现在，却又追忆着和他在一起的过去。喜欢听他说，那一年他是怎么样偷偷喜欢你，远远地凝望着你。爱一个人便是小别时带走他的吻痕，就像一幅画，带着鉴赏者的。\n \n或许这世界上有些梦，美在永远握不到。爱一个人，就是满心满意地要跟他一起过日子，只是希望以彼此的火烬把属于两个人的一世时间填满。\n \n人的一生是一个相互关心关爱的过程，每个人都有情感的需要，其中，语言的交流和情感的表达又是关键。不要让爱人只是用猜想知道你的关爱，而是要让对方时时感受到你的心意，这就是你用嘴巴告诉对方你的爱，还需要用行动来表达爱的程度。\n \n爱一个人，就是无私无畏地为这个人付出所以的一切却无怨无悔。你继续装傻，我继续天真，就这样，谁也不揭穿谁。永远在一起，不分离。也许身在远方，心却从未远离。\n \n人生的路上，我们都在奔跑，我们总在赶超一些人，也总在被一些人超越。人生的要义，一是欣赏沿途的风景，二是抵达遥远的终点。人生的秘诀，就在于寻找一种最适合自己的速度，莫因疾进而不堪重荷，莫因迟缓而空耗生命。人生的快乐，就是走自己的路，看自己的景，超越他人不得意，他人超越不失志。\n \n虽然，人的一生就是一个事件和一个事件的连接，但总是有那么一些情景会让你刻骨铭心，一生都不会忘记。\n \n我要你知道，这个世界上有一个人会永远等着你。无论是在什么时候，无论你在什么地方，反正你知道总会有这样一个人。', '', '心灵鸡汤', 0, 2, '2018-03-14 19:44:38', '2018-03-22 21:33:51'),
	(15, '朋友圈套路句子，干了这碗毒鸡汤！', '1、时间久了，你会发现男人的相貌真的并不重要，重要的是脑子里有智慧，心中有担当，口袋里一定要有大把的钱。 2、人活着，不要想着去欺负别人，但也不要委屈了自己。学会自己欣赏自己，每天送给自己一个微笑，又何愁不快乐。 3、人生就像是一张清单，你要的，或是你想扔的，不必计算得太清楚，换来的不过是烦恼无', '1、时间久了，你会发现男人的相貌真的并不重要，重要的是脑子里有智慧，心中有担当，口袋里一定要有大把的钱。\n\n2、人活着，不要想着去欺负别人，但也不要委屈了自己。学会自己欣赏自己，每天送给自己一个微笑，又何愁不快乐。\n\n3、人生就像是一张清单，你要的，或是你想扔的，不必计算得太清楚，换来的不过是烦恼无数和辛苦一场。有时候，迷迷糊糊也是一种幸福。\n\n4、生活，难免会经历坎坷；心情，难免有起有落。跌宕起伏的人生，分分合合的感情。遇到坎时，要学会一跃而过。实在跃不过时，那就选择转身吧，大不了，咱就从头再来。\n\n5、心灵鸡汤，即使生活有一千个理由让你哭，你也要找到一个理由让自己笑，因为这就是人生，我们能做的只是让自己更加坚强。\n\n6、哭的时候没人哄，学会了坚强；怕的时候没人陪，学会了勇敢；烦的时候没人问，学会了承受；累的时候没人依靠，学会了自立。一个人，如果不坚强，软弱给谁看。\n\n7、有些情，没了就没了，就不去怀念了，再念，心会殇；做人之美，在于简约；做事之美，在于利索；胸怀之美，在于宽阔；聚散之美，在于淡泊。', '', '心灵鸡汤', 0, 3, '2018-03-22 21:21:02', '2018-03-22 21:25:32'),
	(16, 'test就是test啊你说是不是', '<ul> <li>list text here 撒旦法撒旦法<code>` code text here </code>` sdfsdf1. list text here</li> </ul> <p>非官方大哥</p> <h3>电饭锅电饭锅<em>电饭锅电饭锅</em></h3> <blockquo', '<ul>\n<li>list text here\n撒旦法撒旦法<code>`\ncode text here\n</code>`\nsdfsdf1. list text here</li>\n</ul>\n<p>非官方大哥</p>\n<h3>电饭锅电饭锅<em>电饭锅电饭锅</em></h3>\n<blockquote><p>撒旦法撒旦法2424日3</p>\n</blockquote>\n<p>斯蒂芬是否</p>', '<ul>\n<li>list text here\n撒旦法撒旦法<code>`\ncode text here\n</code>`\nsdfsdf1. list text here</li>\n</ul>\n<p>非官方大哥</p>\n<h3>电饭锅电饭锅<em>电饭锅电饭锅</em></h3>\n<blockquote><p>撒旦法撒旦法2424日3</p>\n</blockquote>\n<p>斯蒂芬是否</p>', '其他', 1, 206, '2018-03-23 16:08:20', '2018-03-24 13:02:45'),
	(17, 'markdown测试', '## **爱上对方过后就哭了** 1. 水电费 1. list text here ### 水电费 > 引用 这是引用 ~~划掉的~~ *倾斜* **加粗** [百度一下，你就知道](http://www.baidu.com \"百度一下你就知道\") ![github图标](http://www', '## **爱上对方过后就哭了**\n1. 水电费\n1. list text here\n\n### 水电费\n> 引用\n这是引用\n\n~~划掉的~~\n*倾斜*\n**加粗**\n[百度一下，你就知道](http://www.baidu.com \"百度一下你就知道\")\n![github图标](http://www.ustate.cn/me/img/github.png \"github图标\")\n\n\n- 123\n- 123\n- 14124\n\n\n1. 第一\n2. 第二\n3. 第三\n\n\n```java\npackage cn.shuangbofu.controller;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n/**\n * Created by ericfu on 2018/3/27.\n */\n@Controller\n@RequestMapping(\"/admin\")\npublic class adminController {\n\n    @RequestMapping(\"/edit\")\n    public String createBlog(Model model) {\n\n\n        return \"/admin/blogedit\";\n    }\n}\n```', '<h2 id=\"h2--strong-strong-\"><a name=\"<strong>爱上对方过后就哭了</strong>\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span><strong>爱上对方过后就哭了</strong></h2><ol>\n<li>水电费</li><li>list text here</li></ol>\n<h3 id=\"h3-u6C34u7535u8D39\"><a name=\"水电费\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>水电费</h3><blockquote>\n<p>引用<br>这是引用</p>\n</blockquote>\n<p><del>划掉的</del><br><em>倾斜</em><br><strong>加粗</strong><br><a href=\"http://www.baidu.com\" title=\"百度一下你就知道\">百度一下，你就知道</a><br><img src=\"http://www.ustate.cn/me/img/github.png\" alt=\"github图标\" title=\"github图标\"></p>\n<ul>\n<li>123</li><li>123</li><li>14124</li></ul>\n<ol>\n<li>第一</li><li>第二</li><li>第三</li></ol>\n<pre><code class=\"lang-java\">package cn.shuangbofu.controller;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n/**\n * Created by ericfu on 2018/3/27.\n */\n@Controller\n@RequestMapping(&quot;/admin&quot;)\npublic class adminController {\n\n    @RequestMapping(&quot;/edit&quot;)\n    public String createBlog(Model model) {\n\n\n        return &quot;/admin/blogedit&quot;;\n    }\n}\n</code></pre>', 'markdown', 0, 120, '2018-03-27 16:59:40', '2018-03-27 16:59:40'),
	(18, 'ustate2.0 github里的README.md', '# ustate2 ustate校园匿名社区2.0（重写了vue和后台api以及数据库，重写了vue和后台api以及数据库，解决了之前的一些问题，增加移除了一些功能） 具体也想不起来太多，隔了太久了，总是就是全部重写了。。。 ### 加入： 微博登录 回复 展开全文 ', '# ustate2\nustate校园匿名社区2.0（重写了vue和后台api以及数据库，重写了vue和后台api以及数据库，解决了之前的一些问题，增加移除了一些功能）\n\n具体也想不起来太多，隔了太久了，总是就是全部重写了。。。\n\n### 加入：\n  微博登录  \n  回复  \n  展开全文  \n  输入表情  \n  ...\n#### 更改：\n  样式  \n  ...  \n  数据库表结构  \n#### 删除：\n  匿名回复  \n  我的评论查看  \n  searchCard校园卡  \n  ...  \n## 效果图：\n### index页面\n![Image](http://www.ustate.cn/blogimages/index2.png)  \n### detail页面\n![Image](http://www.ustate.cn/blogimages/detail2.png)  \n### publish页面\n![Image](http://www.ustate.cn/blogimages/publish2.png) \n### profile页面\n![Image](http://www.ustate.cn/blogimages/profile2.png)  \n\n## 链接\n[www.ustate.cn/ustate2/index](http://www.ustate.cn/ustate2/index)\n', '<h1 id=\"h1-ustate2\"><a name=\"ustate2\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>ustate2</h1><p>ustate校园匿名社区2.0（重写了vue和后台api以及数据库，重写了vue和后台api以及数据库，解决了之前的一些问题，增加移除了一些功能）</p>\n<p>具体也想不起来太多，隔了太久了，总是就是全部重写了。。。</p>\n<h3 id=\"h3--\"><a name=\"加入：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>加入：</h3><p>  微博登录<br>  回复<br>  展开全文<br>  输入表情<br>  …</p>\n<h4 id=\"h4--\"><a name=\"更改：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>更改：</h4><p>  样式<br>  …<br>  数据库表结构  </p>\n<h4 id=\"h4--\"><a name=\"删除：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>删除：</h4><p>  匿名回复<br>  我的评论查看<br>  searchCard校园卡<br>  …  </p>\n<h2 id=\"h2--\"><a name=\"效果图：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>效果图：</h2><h3 id=\"h3-index-\"><a name=\"index页面\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>index页面</h3><p><img src=\"http://www.ustate.cn/blogimages/index2.png\" alt=\"Image\">  </p>\n<h3 id=\"h3-detail-\"><a name=\"detail页面\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>detail页面</h3><p><img src=\"http://www.ustate.cn/blogimages/detail2.png\" alt=\"Image\">  </p>\n<h3 id=\"h3-publish-\"><a name=\"publish页面\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>publish页面</h3><p><img src=\"http://www.ustate.cn/blogimages/publish2.png\" alt=\"Image\"> </p>\n<h3 id=\"h3-profile-\"><a name=\"profile页面\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>profile页面</h3><p><img src=\"http://www.ustate.cn/blogimages/profile2.png\" alt=\"Image\">  </p>\n<h2 id=\"h2-u94FEu63A5\"><a name=\"链接\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>链接</h2><p><a href=\"http://www.ustate.cn/ustate2/index\">校园匿名社区</a></p>', '其他', 0, 114, '2018-03-27 18:33:28', '2018-03-27 18:33:28'),
	(19, '标题1', '摘要1', '# safwsdfsafwsdf\n\n> sdfsdfsdfasd', '<h1 id=\"h1-safwsdfsafwsdf\"><a name=\"safwsdfsafwsdf\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>safwsdfsafwsdf</h1><blockquote>\n<p>sdfsdfsdfasd</p>\n</blockquote>\n', '其他', 0, 8, '2018-03-28 14:04:30', '2018-03-28 14:04:30'),
	(22, '介绍微信小程序', '本文主要介绍微信小程序', '开发小程序的第一步，你需要拥有一个小程序帐号，通过这个帐号你就可以管理你的小程序。\n\n跟随这个教程，开始你的小程序之旅吧！\n\n## 申请账号\n\n点击 \n[https://mp.weixin.qq.com/wxopen/waregister?action=step1](https://mp.weixin.qq.com/wxopen/waregister?action=step1 \"https://mp.weixin.qq.com/wxopen/waregister?action=step1\")[![](https://mp.weixin.qq.com/debug/wxadoc/dev/image/quickstart/basic/register.png?t=2018327)](https://mp.weixin.qq.com/debug/wxadoc/dev/image/quickstart/basic/register.png?t=2018327) 根据指引填写信息和提交相应的资料，就可以拥有自己的小程序帐号。\n\n在这个小程序管理平台，你可以管理你的小程序的权限，查看数据报表，发布小程序等操作。\n\n登录 https://mp.weixin.qq.com ，我们可以在菜单 “设置”-“开发设置” 看到小程序的 AppID 了 。', '<p>开发小程序的第一步，你需要拥有一个小程序帐号，通过这个帐号你就可以管理你的小程序。</p>\n<p>跟随这个教程，开始你的小程序之旅吧！</p>\n<h2 id=\"h2-u7533u8BF7u8D26u53F7\"><a name=\"申请账号\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>申请账号</h2><p>点击<br><a href=\"https://mp.weixin.qq.com/wxopen/waregister?action=step1\" title=\"https://mp.weixin.qq.com/wxopen/waregister?action=step1\">https://mp.weixin.qq.com/wxopen/waregister?action=step1</a><a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/image/quickstart/basic/register.png?t=2018327\"><img src=\"https://mp.weixin.qq.com/debug/wxadoc/dev/image/quickstart/basic/register.png?t=2018327\" alt=\"\"></a> 根据指引填写信息和提交相应的资料，就可以拥有自己的小程序帐号。</p>\n<p>在这个小程序管理平台，你可以管理你的小程序的权限，查看数据报表，发布小程序等操作。</p>\n<p>登录 <a href=\"https://mp.weixin.qq.com\">https://mp.weixin.qq.com</a> ，我们可以在菜单 “设置”-“开发设置” 看到小程序的 AppID 了 。</p>\n', '微信小程序,入门,基础', 0, 15, '2018-03-28 15:54:24', '2018-03-28 15:54:24'),
	(23, 'MySQL是什么？', '在学习MySQL之前，首先需要了解数据库和SQL。 如果您已经知道数据库和SQL，那么可以直接跳转到下一章节的学习。', '在学习MySQL之前，首先需要了解数据库和SQL。 如果您已经知道数据库和SQL，那么可以直接跳转到下一章节的学习。\n\n#### 1. 数据库简介\n当您想收听最喜欢的歌曲时，可以从智能手机上打开播放列表。在这种情况下，播放列表是数据库就是从数据库中读取出来的。\n\n当您拍摄照片并将其上传到微博，朋友圈等，这样的社交网络中的帐户时，您的照片库就有可能存储在一个数据库中。\n\n当您浏览电子商务网站购买鞋子，衣服等时，您使用购物车就是数据库应用。\n\n数据库无处不在。 那么什么是数据库？ 根据定义，数据库只是一个结构化的数据集合。\n\n数据本质上相互关联，例如，产品属于产品类别并与多个标签相关联。这就是为什么要使用关系数据库。\n\n在关系数据库中，我们使用表对产品，类别，标签等数据进行建模。 表包含列和行。它就像一个电子表格(Excel)。\n\n表可以涉及的使用有：一对一，一对多，多对一关系等关系。\n\n因为我们要处理大量的数据，所以需要一种方法来定义数据库，表等，并更有效地处理数据。 另外，我们可以将数据转换成数据信息。\n\n所以就需要SQL来处理了。\n\n#### 2. SQL - 数据库的语言\nSQL代表结构化查询语言(Structured Query Language)。SQL是用于访问数据库的标准化语言。\n\n> ANSI/SQL定义了SQL标准。当前版本的SQL是 SQL:2003 。每当我们引用SQL标准时，指的就是当前的SQL版本。\n\nSQL包含三个部分：\n\n- 数据定义语言包含定义数据库及其对象的语句，例如表，视图，触发器，存储过程等。\n- 数据操作语言包含允许您更新和查询数据的语句。\n- 数据控制语言允许授予用户权限访问数据库中特定数据的权限。\n现在，您了解数据库和SQL，现在是时候回答下一个问题了…\n\n#### 3. MySQL是什么？\nMy是MySQL的联合创始人 - Monty Widenius 的女儿的名字。MySQL是My和SQL的组合，这就是MySQL命名的由来。\n\nMySQL的官方网址： http://www.mysql.com/ ，MySQL的社区版本下载地址为： http://dev.mysql.com/downloads/mysql/ ，在写本文时，当前的MySQL最新版本是：5.7.18 。\n\nMySQL是一个数据库管理系统，也是一个关系数据库。它是由Oracle支持的开源软件。这意味着任何一个人都可以使用MySQL而不用支付一毛钱。 另外，如果需要，还可以更改其源代码或进行二次开发以满足您的需要。\n\n即使MySQL是开源软件，但是可以从Oracle购买商业许可证版本，以获得高级支持服务(特殊企业用户需要)。\n\n与其他数据库软件(如Oracle数据库或Microsoft SQL Server)相比，MySQL非常容易学习和掌握。\n\nMySQL可以在各种平台上运行UNIX，Linux，Windows等。可以将其安装在服务器甚至桌面系统上。 此外，MySQL是可靠，可扩展和快速的。\n\n如果您开发网站或Web应用程序，MySQL是一个不错的选择(强烈建议使用)。MySQL是LAMP堆栈的重要组成部分，包括Linux，Apache，MySQL和PHP。', '<p>在学习MySQL之前，首先需要了解数据库和SQL。 如果您已经知道数据库和SQL，那么可以直接跳转到下一章节的学习。</p>\n<h4 id=\"h4-1-\"><a name=\"1. 数据库简介\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1. 数据库简介</h4><p>当您想收听最喜欢的歌曲时，可以从智能手机上打开播放列表。在这种情况下，播放列表是数据库就是从数据库中读取出来的。</p>\n<p>当您拍摄照片并将其上传到微博，朋友圈等，这样的社交网络中的帐户时，您的照片库就有可能存储在一个数据库中。</p>\n<p>当您浏览电子商务网站购买鞋子，衣服等时，您使用购物车就是数据库应用。</p>\n<p>数据库无处不在。 那么什么是数据库？ 根据定义，数据库只是一个结构化的数据集合。</p>\n<p>数据本质上相互关联，例如，产品属于产品类别并与多个标签相关联。这就是为什么要使用关系数据库。</p>\n<p>在关系数据库中，我们使用表对产品，类别，标签等数据进行建模。 表包含列和行。它就像一个电子表格(Excel)。</p>\n<p>表可以涉及的使用有：一对一，一对多，多对一关系等关系。</p>\n<p>因为我们要处理大量的数据，所以需要一种方法来定义数据库，表等，并更有效地处理数据。 另外，我们可以将数据转换成数据信息。</p>\n<p>所以就需要SQL来处理了。</p>\n<h4 id=\"h4-2-sql-\"><a name=\"2. SQL - 数据库的语言\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2. SQL - 数据库的语言</h4><p>SQL代表结构化查询语言(Structured Query Language)。SQL是用于访问数据库的标准化语言。</p>\n<blockquote>\n<p>ANSI/SQL定义了SQL标准。当前版本的SQL是 SQL:2003 。每当我们引用SQL标准时，指的就是当前的SQL版本。</p>\n</blockquote>\n<p>SQL包含三个部分：</p>\n<ul>\n<li>数据定义语言包含定义数据库及其对象的语句，例如表，视图，触发器，存储过程等。</li><li>数据操作语言包含允许您更新和查询数据的语句。</li><li>数据控制语言允许授予用户权限访问数据库中特定数据的权限。<br>现在，您了解数据库和SQL，现在是时候回答下一个问题了…</li></ul>\n<h4 id=\"h4-3-mysql-\"><a name=\"3. MySQL是什么？\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3. MySQL是什么？</h4><p>My是MySQL的联合创始人 - Monty Widenius 的女儿的名字。MySQL是My和SQL的组合，这就是MySQL命名的由来。</p>\n<p>MySQL的官方网址： <a href=\"http://www.mysql.com/\">http://www.mysql.com/</a> ，MySQL的社区版本下载地址为： <a href=\"http://dev.mysql.com/downloads/mysql/\">http://dev.mysql.com/downloads/mysql/</a> ，在写本文时，当前的MySQL最新版本是：5.7.18 。</p>\n<p>MySQL是一个数据库管理系统，也是一个关系数据库。它是由Oracle支持的开源软件。这意味着任何一个人都可以使用MySQL而不用支付一毛钱。 另外，如果需要，还可以更改其源代码或进行二次开发以满足您的需要。</p>\n<p>即使MySQL是开源软件，但是可以从Oracle购买商业许可证版本，以获得高级支持服务(特殊企业用户需要)。</p>\n<p>与其他数据库软件(如Oracle数据库或Microsoft SQL Server)相比，MySQL非常容易学习和掌握。</p>\n<p>MySQL可以在各种平台上运行UNIX，Linux，Windows等。可以将其安装在服务器甚至桌面系统上。 此外，MySQL是可靠，可扩展和快速的。</p>\n<p>如果您开发网站或Web应用程序，MySQL是一个不错的选择(强烈建议使用)。MySQL是LAMP堆栈的重要组成部分，包括Linux，Apache，MySQL和PHP。</p>\n', 'Mysql,基础', 0, 20, '2018-03-28 15:59:02', '2018-03-28 15:59:02'),
	(24, '1', '1', '> 1231231\n\n\n\n1. 撒旦法撒旦法\n似懂非懂\n撒地方撒地方', '<blockquote>\n<p>1231231</p>\n</blockquote>\n<ol>\n<li>撒旦法撒旦法<br>似懂非懂<br>撒地方撒地方</li></ol>\n', '其他', 0, 4, '2018-03-28 16:15:12', '2018-03-28 16:15:12'),
	(25, '看起来好像是第20篇博客', '摘要就几个字', '# 标题1\n> 引言部分：说点什么好呢\n\n#### 来放个图片\n[![洛杉矶湖人](http://www.ustate.cn/lakers/images/13.png \"洛杉矶湖人\")](http://www.ustate.cn/lakers/images/13.png \"洛杉矶湖人\")\n\n#### 再来放个链接\n[Lakers‘Page](http://www.ustate.cn/lakers/lakers.html \"Lakers‘Page\")', '<h1 id=\"h1--1\"><a name=\"标题1\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>标题1</h1><blockquote>\n<p>引言部分：说点什么好呢</p>\n</blockquote>\n<h4 id=\"h4-u6765u653Eu4E2Au56FEu7247\"><a name=\"来放个图片\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>来放个图片</h4><p><a href=\"http://www.ustate.cn/lakers/images/13.png\" title=\"洛杉矶湖人\"><img src=\"http://www.ustate.cn/lakers/images/13.png\" alt=\"洛杉矶湖人\" title=\"洛杉矶湖人\"></a></p>\n<h4 id=\"h4-u518Du6765u653Eu4E2Au94FEu63A5\"><a name=\"再来放个链接\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>再来放个链接</h4><p><a href=\"http://www.ustate.cn/lakers/lakers.html\" title=\"Lakers‘Page\">Lakers‘Page</a></p>\n', '其他', 0, 17, '2018-03-28 16:41:23', '2018-03-28 16:41:23');
